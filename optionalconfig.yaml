substitutions:
  devicename: "exampled1mini"
  friendly_name: "Example D1 Mini"


esphome:
  name: $devicename # The name of the device

esp8266: # The platform type
  board: d1_mini # The type of ESP board
  
# Enabling the logging component
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "i51USvDruBRuPndxTYuQ41ijowUdoQVXOKYwPUQITAw=" # This is the HA encryption key HA asks for during the device discovery
    
# The OTA flashing password
ota:
  password: !secret ota_password

wifi: # Your Wifi network details
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  
# Enable fallback hotspot in case wifi connection fails  
  ap:
    ssid: "exampled1mini Fallback Hotspot" # The name of the AP the device will make
    password: !secret ap_password # The AP password
captive_portal:

# Optional extras

web_server: # Creates a simple web server on the device that can be accessed through any browser by entering the device IP in the URL bar
  port: 80

sensor:
    
  - platform: uptime # Creates an uptime sensor and converts it into a human redable value
    name: ${friendly_name} Uptime
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_secs
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? to_string(days) + "d " : "") +
                (hours ? to_string(hours) + "h " : "") +
                (minutes ? to_string(minutes) + "m " : "") +
                (to_string(seconds) + "s")
              ).c_str();   
              
text_sensor:
  - platform: version # Creates a sensor showing the running ESPHome version on the device
    name: ${friendly_name} Version

  - platform: template # The uptime in seconds
    name: ${friendly_name} Uptime in seconds
    id: uptime_secs
    icon: mdi:clock-start

switch:     
  - platform: restart # Adds a restart button as an entity in Home Assistant and the webserver to restart the device.
    name: $friendly_name Restart

